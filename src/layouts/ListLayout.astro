---
import type { CollectionEntry } from "astro:content";
import type { Page } from "astro";

import ListPostCover from "@/components/ListPostCover.astro";
import Link from "../components/Link.astro";
import Pagination from "../components/Pagination.astro";
import Tag from "../components/Tag.astro";
import BaseLayout from "./BaseLayout.astro";

interface Props {
  title: string;
  description: string;
  titleTemplate?: string;
  page: Page<CollectionEntry<"blog">>;
  robots?: string;
}

const { title, description, page, robots, titleTemplate } = Astro.props;
const hasDefaultSlot = Astro.slots.has("default");
---

<BaseLayout {title} {description} {robots} {titleTemplate}>
  <div>
    <div class="space-y-2 pb-8 pt-6 md:space-y-5">
      <h1
        class="text-3xl font-extrabold leading-9 tracking-tight sm:text-4xl sm:leading-10 md:text-6xl md:leading-14"
      >
        {title}
      </h1>
      <div class="divider divider-vertical divider-neutral"></div>
      {
        hasDefaultSlot && (
          <div class="prose dark:prose-invert py-4">
            <slot />
          </div>
        )
      }
    </div>
    <ul>
      {!page.data.length && "No posts found... yet."}
      {
        page.data.map((post) => {
          const {
            slug,
            data: { title, summary, tags },
          } = post;
          return (
            <li class="py-4">
              <article class="space-y-2 xl:grid xl:grid-cols-4 space-x-4 xl:space-y-0 xl:items-stretch">
                {/* <ListPostCover {post} class="space-y-5 xl:col-span-1" /> */}
                <div class="space-y-3 xl:col-span-3">
                  <div>
                    <h3 class="text-2xl font-bold leading-8 tracking-tight">
                      <Link href={`/blog/${slug}`}>{title}</Link>
                    </h3>
                    <div class="flex flex-wrap">
                      {tags.map(({ slug }) => (
                        <Tag slug={slug} />
                      ))}
                    </div>
                  </div>
                  <div class="prose max-w-none font-light">{summary}</div>
                </div>
              </article>
            </li>
          );
        })
      }
    </ul>
  </div>

  {(page.url.next || page.url.prev) && <Pagination page={page} />}
</BaseLayout>
